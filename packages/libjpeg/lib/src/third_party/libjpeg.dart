// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;
import 'package:libexif/libexif.dart' as libexif;

/// Dart bindings for libjpeg
class LibJpeg {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  LibJpeg(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  LibJpeg.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Char> jpeg_marker_get_name(
    int marker,
  ) {
    return _jpeg_marker_get_name(
      marker,
    );
  }

  late final _jpeg_marker_get_namePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'jpeg_marker_get_name');
  late final _jpeg_marker_get_name = _jpeg_marker_get_namePtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<ffi.Char> jpeg_marker_get_description(
    int marker,
  ) {
    return _jpeg_marker_get_description(
      marker,
    );
  }

  late final _jpeg_marker_get_descriptionPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'jpeg_marker_get_description');
  late final _jpeg_marker_get_description = _jpeg_marker_get_descriptionPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  ffi.Pointer<JPEGData> jpeg_data_new() {
    return _jpeg_data_new();
  }

  late final _jpeg_data_newPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<JPEGData> Function()>>(
          'jpeg_data_new');
  late final _jpeg_data_new =
      _jpeg_data_newPtr.asFunction<ffi.Pointer<JPEGData> Function()>();

  ffi.Pointer<JPEGData> jpeg_data_new_from_file(
    ffi.Pointer<ffi.Char> path,
  ) {
    return _jpeg_data_new_from_file(
      path,
    );
  }

  late final _jpeg_data_new_from_filePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<JPEGData> Function(
              ffi.Pointer<ffi.Char>)>>('jpeg_data_new_from_file');
  late final _jpeg_data_new_from_file = _jpeg_data_new_from_filePtr
      .asFunction<ffi.Pointer<JPEGData> Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<JPEGData> jpeg_data_new_from_data(
    ffi.Pointer<ffi.UnsignedChar> data,
    int size,
  ) {
    return _jpeg_data_new_from_data(
      data,
      size,
    );
  }

  late final _jpeg_data_new_from_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<JPEGData> Function(ffi.Pointer<ffi.UnsignedChar>,
              ffi.UnsignedInt)>>('jpeg_data_new_from_data');
  late final _jpeg_data_new_from_data = _jpeg_data_new_from_dataPtr.asFunction<
      ffi.Pointer<JPEGData> Function(ffi.Pointer<ffi.UnsignedChar>, int)>();

  void jpeg_data_ref(
    ffi.Pointer<JPEGData> data,
  ) {
    return _jpeg_data_ref(
      data,
    );
  }

  late final _jpeg_data_refPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<JPEGData>)>>(
          'jpeg_data_ref');
  late final _jpeg_data_ref =
      _jpeg_data_refPtr.asFunction<void Function(ffi.Pointer<JPEGData>)>();

  void jpeg_data_unref(
    ffi.Pointer<JPEGData> data,
  ) {
    return _jpeg_data_unref(
      data,
    );
  }

  late final _jpeg_data_unrefPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<JPEGData>)>>(
          'jpeg_data_unref');
  late final _jpeg_data_unref =
      _jpeg_data_unrefPtr.asFunction<void Function(ffi.Pointer<JPEGData>)>();

  void jpeg_data_free(
    ffi.Pointer<JPEGData> data,
  ) {
    return _jpeg_data_free(
      data,
    );
  }

  late final _jpeg_data_freePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<JPEGData>)>>(
          'jpeg_data_free');
  late final _jpeg_data_free =
      _jpeg_data_freePtr.asFunction<void Function(ffi.Pointer<JPEGData>)>();

  void jpeg_data_load_data(
    ffi.Pointer<JPEGData> data,
    ffi.Pointer<ffi.UnsignedChar> d,
    int size,
  ) {
    return _jpeg_data_load_data(
      data,
      d,
      size,
    );
  }

  late final _jpeg_data_load_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<JPEGData>,
              ffi.Pointer<ffi.UnsignedChar>,
              ffi.UnsignedInt)>>('jpeg_data_load_data');
  late final _jpeg_data_load_data = _jpeg_data_load_dataPtr.asFunction<
      void Function(
          ffi.Pointer<JPEGData>, ffi.Pointer<ffi.UnsignedChar>, int)>();

  void jpeg_data_save_data(
    ffi.Pointer<JPEGData> data,
    ffi.Pointer<ffi.Pointer<ffi.UnsignedChar>> d,
    ffi.Pointer<ffi.UnsignedInt> size,
  ) {
    return _jpeg_data_save_data(
      data,
      d,
      size,
    );
  }

  late final _jpeg_data_save_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Pointer<JPEGData>,
              ffi.Pointer<ffi.Pointer<ffi.UnsignedChar>>,
              ffi.Pointer<ffi.UnsignedInt>)>>('jpeg_data_save_data');
  late final _jpeg_data_save_data = _jpeg_data_save_dataPtr.asFunction<
      void Function(
          ffi.Pointer<JPEGData>,
          ffi.Pointer<ffi.Pointer<ffi.UnsignedChar>>,
          ffi.Pointer<ffi.UnsignedInt>)>();

  void jpeg_data_load_file(
    ffi.Pointer<JPEGData> data,
    ffi.Pointer<ffi.Char> path,
  ) {
    return _jpeg_data_load_file(
      data,
      path,
    );
  }

  late final _jpeg_data_load_filePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<JPEGData>,
              ffi.Pointer<ffi.Char>)>>('jpeg_data_load_file');
  late final _jpeg_data_load_file = _jpeg_data_load_filePtr.asFunction<
      void Function(ffi.Pointer<JPEGData>, ffi.Pointer<ffi.Char>)>();

  int jpeg_data_save_file(
    ffi.Pointer<JPEGData> data,
    ffi.Pointer<ffi.Char> path,
  ) {
    return _jpeg_data_save_file(
      data,
      path,
    );
  }

  late final _jpeg_data_save_filePtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(ffi.Pointer<JPEGData>,
              ffi.Pointer<ffi.Char>)>>('jpeg_data_save_file');
  late final _jpeg_data_save_file = _jpeg_data_save_filePtr
      .asFunction<int Function(ffi.Pointer<JPEGData>, ffi.Pointer<ffi.Char>)>();

  void jpeg_data_set_exif_data(
    ffi.Pointer<JPEGData> data,
    ffi.Pointer<libexif.ExifData> exif_data,
  ) {
    return _jpeg_data_set_exif_data(
      data,
      exif_data,
    );
  }

  late final _jpeg_data_set_exif_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<JPEGData>,
              ffi.Pointer<libexif.ExifData>)>>('jpeg_data_set_exif_data');
  late final _jpeg_data_set_exif_data = _jpeg_data_set_exif_dataPtr.asFunction<
      void Function(ffi.Pointer<JPEGData>, ffi.Pointer<libexif.ExifData>)>();

  ffi.Pointer<libexif.ExifData> jpeg_data_get_exif_data(
    ffi.Pointer<JPEGData> data,
  ) {
    return _jpeg_data_get_exif_data(
      data,
    );
  }

  late final _jpeg_data_get_exif_dataPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<libexif.ExifData> Function(
              ffi.Pointer<JPEGData>)>>('jpeg_data_get_exif_data');
  late final _jpeg_data_get_exif_data = _jpeg_data_get_exif_dataPtr.asFunction<
      ffi.Pointer<libexif.ExifData> Function(ffi.Pointer<JPEGData>)>();

  void jpeg_data_dump(
    ffi.Pointer<JPEGData> data,
  ) {
    return _jpeg_data_dump(
      data,
    );
  }

  late final _jpeg_data_dumpPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<JPEGData>)>>(
          'jpeg_data_dump');
  late final _jpeg_data_dump =
      _jpeg_data_dumpPtr.asFunction<void Function(ffi.Pointer<JPEGData>)>();

  void jpeg_data_append_section(
    ffi.Pointer<JPEGData> data,
  ) {
    return _jpeg_data_append_section(
      data,
    );
  }

  late final _jpeg_data_append_sectionPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<JPEGData>)>>(
          'jpeg_data_append_section');
  late final _jpeg_data_append_section = _jpeg_data_append_sectionPtr
      .asFunction<void Function(ffi.Pointer<JPEGData>)>();

  void jpeg_data_log(
    ffi.Pointer<JPEGData> data,
    ffi.Pointer<libexif.ExifLog> log,
  ) {
    return _jpeg_data_log(
      data,
      log,
    );
  }

  late final _jpeg_data_logPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<JPEGData>,
              ffi.Pointer<libexif.ExifLog>)>>('jpeg_data_log');
  late final _jpeg_data_log = _jpeg_data_logPtr.asFunction<
      void Function(ffi.Pointer<JPEGData>, ffi.Pointer<libexif.ExifLog>)>();
}

abstract class JPEGMarker {
  static const int JPEG_MARKER_SOF0 = 192;
  static const int JPEG_MARKER_SOF1 = 193;
  static const int JPEG_MARKER_SOF2 = 194;
  static const int JPEG_MARKER_SOF3 = 195;
  static const int JPEG_MARKER_DHT = 196;
  static const int JPEG_MARKER_SOF5 = 197;
  static const int JPEG_MARKER_SOF6 = 198;
  static const int JPEG_MARKER_SOF7 = 199;
  static const int JPEG_MARKER_JPG = 200;
  static const int JPEG_MARKER_SOF9 = 201;
  static const int JPEG_MARKER_SOF10 = 202;
  static const int JPEG_MARKER_SOF11 = 203;
  static const int JPEG_MARKER_DAC = 204;
  static const int JPEG_MARKER_SOF13 = 205;
  static const int JPEG_MARKER_SOF14 = 206;
  static const int JPEG_MARKER_SOF15 = 207;
  static const int JPEG_MARKER_RST0 = 208;
  static const int JPEG_MARKER_RST1 = 209;
  static const int JPEG_MARKER_RST2 = 210;
  static const int JPEG_MARKER_RST3 = 211;
  static const int JPEG_MARKER_RST4 = 212;
  static const int JPEG_MARKER_RST5 = 213;
  static const int JPEG_MARKER_RST6 = 214;
  static const int JPEG_MARKER_RST7 = 215;
  static const int JPEG_MARKER_SOI = 216;
  static const int JPEG_MARKER_EOI = 217;
  static const int JPEG_MARKER_SOS = 218;
  static const int JPEG_MARKER_DQT = 219;
  static const int JPEG_MARKER_DNL = 220;
  static const int JPEG_MARKER_DRI = 221;
  static const int JPEG_MARKER_DHP = 222;
  static const int JPEG_MARKER_EXP = 223;
  static const int JPEG_MARKER_APP0 = 224;
  static const int JPEG_MARKER_APP1 = 225;
  static const int JPEG_MARKER_APP2 = 226;
  static const int JPEG_MARKER_APP3 = 227;
  static const int JPEG_MARKER_APP4 = 228;
  static const int JPEG_MARKER_APP5 = 229;
  static const int JPEG_MARKER_APP6 = 230;
  static const int JPEG_MARKER_APP7 = 231;
  static const int JPEG_MARKER_APP8 = 232;
  static const int JPEG_MARKER_APP9 = 233;
  static const int JPEG_MARKER_APP10 = 234;
  static const int JPEG_MARKER_APP11 = 235;
  static const int JPEG_MARKER_APP12 = 236;
  static const int JPEG_MARKER_APP13 = 237;
  static const int JPEG_MARKER_APP14 = 238;
  static const int JPEG_MARKER_APP15 = 239;
  static const int JPEG_MARKER_JPG0 = 240;
  static const int JPEG_MARKER_JPG1 = 241;
  static const int JPEG_MARKER_JPG2 = 242;
  static const int JPEG_MARKER_JPG3 = 243;
  static const int JPEG_MARKER_JPG4 = 244;
  static const int JPEG_MARKER_JPG5 = 245;
  static const int JPEG_MARKER_JPG6 = 246;
  static const int JPEG_MARKER_JPG7 = 247;
  static const int JPEG_MARKER_JPG8 = 248;
  static const int JPEG_MARKER_JPG9 = 249;
  static const int JPEG_MARKER_JPG10 = 250;
  static const int JPEG_MARKER_JPG11 = 251;
  static const int JPEG_MARKER_JPG12 = 252;
  static const int JPEG_MARKER_JPG13 = 253;
  static const int JPEG_MARKER_COM = 254;
}

final class _JPEGContentGeneric extends ffi.Struct {
  external ffi.Pointer<ffi.UnsignedChar> data;

  @ffi.UnsignedInt()
  external int size;
}

final class _JPEGSection extends ffi.Struct {
  @ffi.Int32()
  external int marker;

  external JPEGContent content;
}

typedef JPEGContent = _JPEGContent;

final class _JPEGContent extends ffi.Union {
  external JPEGContentGeneric generic;

  external JPEGContentAPP1 app1;
}

typedef JPEGContentGeneric = _JPEGContentGeneric;
typedef JPEGContentAPP1 = ffi.Pointer<libexif.ExifData>;

final class _JPEGData extends ffi.Struct {
  external ffi.Pointer<JPEGSection> sections;

  @ffi.UnsignedInt()
  external int count;

  external ffi.Pointer<ffi.UnsignedChar> data;

  @ffi.UnsignedInt()
  external int size;

  external ffi.Pointer<JPEGDataPrivate> priv;
}

typedef JPEGSection = _JPEGSection;
typedef JPEGDataPrivate = _JPEGDataPrivate;

final class _JPEGDataPrivate extends ffi.Opaque {}

typedef JPEGData = _JPEGData;
